@inject AltaUsuarioUseCase altaUs;

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Nombre</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Nombre" aria-label="default input example" @bind-value= "usuarioView.Nombre">
    </div>
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Apellido </label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Apellido" aria-label="default input example"@bind-value= "usuarioView.Apellido">
    </div>
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Correo electronico</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Correo electronico" aria-label="default input example"@bind-value= "usuarioView.CorreoElectronico">
    </div>
    <div class="row-auto">
        <label for="inputPassword6" class="col-form-label">Clave</label>
    </div>
    <div class="row-auto">
        <input type="password" id="inputPassword6" class="form-control" aria-describedby="passwordHelpInline"@bind-value= "usuarioView.Clave">
    </div>
    <Button Color="ButtonColor.Primary" @onclick="Registrar">Registrar</Button>
    <div>
    @if(alert)
    {
     <Alert Color="AlertColor.Success">
        <h4 class="alert-heading">Registro completado!</h4>
        <p>Bienvenido al sistema</p>
        <hr>
     </Alert>
    }
    @if(alert2)
    {
     <Alert Color="AlertColor.Danger">
        <h4 class="alert-heading">error:@mensaje </h4>
        <hr>
     </Alert>
    }
    
    </div>
</div>



@code
{
    private class usuarioViewModel
    {
        public string? Nombre { get; set; }
        public string? Apellido { get; set; }
        public string? CorreoElectronico { get; set; }
        public string? Clave { get; set; }
    }
        

    usuarioViewModel usuarioView = new();
    
    bool alert = false;
    bool alert2 = false;
    string? mensaje;
    private void Registrar()
{   
    try 
    {
        if (!string.IsNullOrEmpty(usuarioView.Clave) && 
            !string.IsNullOrEmpty(usuarioView.Nombre) && 
            !string.IsNullOrEmpty(usuarioView.Apellido) && 
            !string.IsNullOrEmpty(usuarioView.CorreoElectronico))   
        {
            List<Permiso> permisos = new List<Permiso> { Permiso.Usuario };
            Usuario usuario = new Usuario(usuarioView.Nombre, usuarioView.Apellido, usuarioView.CorreoElectronico, 
                                          HashingUtil.ConvertirCadena(usuarioView.Clave), permisos);
            
            altaUs.Ejecutar(usuario);
            alert = true;
            
        }
    }
    catch (Exception ex) // Maneja cualquier excepci√≥n inesperada
    {
        mensaje =  ex.Message;
        alert2 = true;
    }
    
}


}    