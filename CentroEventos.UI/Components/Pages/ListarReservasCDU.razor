@page "/listarReservas"
@rendermode InteractiveServer
@inject ListarReservaUseCase ListarReservaUseCase
@inject ListarPersonasUseCase RepoPersona
@inject ListarEventosUseCase RepoEvento
@inject IServicioAutorizacion autorizacion

<h3>Listado de Reservas</h3>

@if (_reservas is null)
{
    <p>Cargando...</p>
}
else if (_reservas.Count == 0)
{
    <p>No hay reservas registradas.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Persona ID</th>
                <th>Evento ID</th>
                <th>Fecha de Alta</th>
                <th>Estado de Asistencia</th>
                @if (esAdmin)
                {
                  <th>Acciones</th> <!--- Solo se ve si tengo el permiso (soy administrador) --->
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var r in listaReserva)
            {
                <tr>
                    <td>@($"{r.persona.Nombre} {r.persona.Apellido}")</td>
                    <td>@r.eventoDeportivo.Nombre</td>
                    <td>@r.FechaAltaReserva.ToString("dd/MM/yyyy")</td>
                    <td>@r.estadoAsistencia.ToString()</td>
                    @if (esAdmin)
                    {
                      <th>Acciones</th> <!--- Solo se ve si tengo el permiso (soy administrador) --->
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    bool esAdmin=false;
    private List<Reserva>? _reservas;
    public class reservaViewModel {
        public int Id { get; set; }
        public int PersonaId { get; set; }
        public Persona? persona  { get; set; }
        public int EventoDeportivoId { get; set; }
        public EventoDeportivo? eventoDeportivo { get; set; }
        public DateTime FechaAltaReserva { get; set; }

        public EstadosAsistencia estadoAsistencia { get; set; }
    }
    List<reservaViewModel> listaReserva = new ();
    reservaViewModel reservaView = new ();
    protected override void OnInitialized()
    {
        _reservas = ListarReservaUseCase.Ejecutar();
             hacer(_reservas);
        var usuarioActual = autorizacion.ObtenerUsuarioActivo();
        bool esAdmin = usuarioActual != null && autorizacion.PoseeElPermiso(usuarioActual, Permiso.Administrador);
   
    }
    public void hacer (List<Reserva>reservas){
            var Personas = RepoPersona.Ejecutar(); 
         var RepoEventos = RepoEvento.Ejecutar();
         foreach (var r in _reservas){
            reservaView.Id= r.Id;
            reservaView.FechaAltaReserva = r.FechaAltaReserva; 
            reservaView.estadoAsistencia = r.EstadoAsistencia;
            reservaView.persona = Personas.FirstOrDefault(p=>p.Id == r.PersonaId);
            reservaView.eventoDeportivo = RepoEventos.FirstOrDefault(e=>e.Id == r.EventoDeportivoId);
            listaReserva.Add(reservaView);
            }
        }


}    using System.Security.AccessControl;

#nullable disable
#line default
