@page "/listadoreservas"
@rendermode InteractiveServer
@inject ListarReservaUseCase listarReservaUseCase
@inject ListarPersonasUseCase RepoPersona
@inject ListarEventosUseCase RepoEvento

@inject IServicioAutorizacion autorizacion
@inject ISesion sesion


<h3>Listado de Reservas</h3>
<button class="btn btn-primary">
    <span class="bi bi-plus " aria-hidden="true"></span> 
</button> 
@if (_reservas is null)
{
    <p>Cargando reservas...</p>
}
else if (_reservas.Count == 0)
{
    <p>No hay reservas registradas.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Quien reservo</th>
                <th>Evento</th>
                <th>Fecha de Alta</th>
                <th>Estado de Asistencia</th>
                @if (esAdmin)
                {
                  <th>Acciones</th> <!--- Solo se ve si tengo el permiso (soy administrador) --->
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var r in listaReserva)
            {
                <tr>
                    <td>@($"{r.persona?.Nombre} {r.persona?.Apellido}")</td>
                    <td>@r.eventoDeportivo?.Nombre</td>
                    <td>@r.FechaAltaReserva.ToString("dd/MM/yyyy")</td>
                    <td>@r.estadoAsistencia.ToString()</td>
                    @if (esAdmin)
                    {
                      <td>  
                        <button class="btn btn-primary">
                            <span class="bi bi-pencil " aria-hidden="true"></span> 
                        </button>
                        <button class="btn btn-danger">
                          <span class="bi bi-trash" aria-hidden="true"></span>
                         </button>
                      </td><!--- Solo se ve si tengo el permiso (soy administrador) --->
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    bool esAdmin=false;
    private List<Reserva>? _reservas;
    public class reservaViewModel
    {
        public int Id { get; set; }
        public int PersonaId { get; set; }
        public Persona? persona  { get; set; }
        public int EventoDeportivoId { get; set; }
        public EventoDeportivo? eventoDeportivo { get; set; }
        public DateTime FechaAltaReserva { get; set; }
        public EstadosAsistencia estadoAsistencia { get; set; }
    }

    List<reservaViewModel> listaReserva = new ();

    protected override void OnInitialized()
    {
        _reservas = listarReservaUseCase.Ejecutar();
        hacer(_reservas);
        var usuarioActual = sesion.ObtenerUsuarioActivo();
        esAdmin = usuarioActual != null && autorizacion.PoseeElPermiso(usuarioActual, Permiso.Administrador);
       

    }

    public void hacer (List<Reserva>reservas)
    {
        var Personas = RepoPersona.Ejecutar();
        var repoEventos = RepoEvento.Ejecutar();
        if (_reservas != null)
        {
            foreach (var r in _reservas)
            {
                reservaViewModel reservaView = new ()
                {
                    Id= r.Id,
                    FechaAltaReserva = r.FechaAltaReserva,
                    estadoAsistencia = r.EstadoAsistencia,
                    persona = Personas.FirstOrDefault(p=>p.Id == r.PersonaId),
                    eventoDeportivo = repoEventos.FirstOrDefault(e=>e.Id == r.EventoDeportivoId)
                };
                listaReserva.Add(reservaView);
            }
        }
    }
}
