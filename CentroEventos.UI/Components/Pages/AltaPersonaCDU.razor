@page "/agregarpersona"
@rendermode InteractiveServer
@inject AltaPersonaUseCase altaPersona
@inject ServicioAutorizacion permisos

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Dni</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Default input" aria-label="default input example" @bind-value= "personaView.Dni">
    </div>
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Nombre</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Default input" aria-label="default input example" @bind-value= "personaView.Nombre">
    </div>
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Apellido </label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Default input" aria-label="default input example"@bind-value= "personaView.Apellido">
    </div>
    <div class="row-auto">
        <label for="inputUsuario" class="col-form-label">Email</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" placeholder="Default input" aria-label="default input example"@bind-value= "personaView.Email">
    </div>
    <div class="row-auto">
        <label for="inputPassword6" class="col-form-label">Telefono</label>
    </div>
    <div class="row-auto">
        <input type="password" id="inputPassword6" class="form-control" aria-describedby="passwordHelpInline"@bind-value= "personaView.Telefono">
    </div>
    <Button Color="ButtonColor.Secondary" @onclick="Registrar">Registrar</Button>
    <div>
    @if(alert)
    {
     <Alert Color="AlertColor.Danger">
        <h4 class="alert-heading">Registro completado!</h4>
        <p>Bienvenido al sistema</p>
        <hr>
     </Alert>
    }

    </div>
</div>

@code {
    private class personaViewModel
    {
        public string? Dni { get; set; }
        public string? Nombre { get; set; }
        public string? Apellido { get; set; }
        public string? Email { get; set; }
        public string? Telefono { get; set; }
    }
    personaViewModel personaView = new();
    bool alert = false;
    private void Registrar()
    {
        Usuario? usuario = permisos.ObtenerUsuarioActivo();
        
        try
        {   
            if (usuario == null)
            {
                throw new Exception($"Error en el registro: Inicie sesion para poder registrarse");
            }
            if (!string.IsNullOrEmpty(personaView.Dni) && 
                !string.IsNullOrEmpty(personaView.Nombre) && 
                !string.IsNullOrEmpty(personaView.Apellido) && 
                !string.IsNullOrEmpty(personaView.Email)  &&
                !string.IsNullOrEmpty(personaView.Telefono))   
            {
                Persona p = new Persona(personaView.Dni, personaView.Nombre, personaView.Apellido,
                                        personaView.Email, personaView.Telefono);
                
                altaPersona.Ejecutar(p, usuario);
                alert = true;
            }
        }
        catch (Exception ex) // Maneja cualquier excepción inesperada
        {
            Console.WriteLine($"Error en el registro: {ex.Message}");
            // Aquí podrías loguear el error o notificar al usuario
        }
    }
}
