@page "/modificarevento/{idUsuario:int}"
@rendermode InteractiveServer

@inject ModificarEventoUseCase modificarEvento
@inject ServicioAutorizacion permisos
@inject IRepositorioPersona RepoPersona

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label class="col-form-label">Nombre</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="eventoView.Nombre" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Descripción</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="eventoView.Descripcion" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Fecha de inicio</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="datetime-local" @bind-value="eventoView.FechaHoraInicio" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Duración (horas)</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="number" step="0.1" @bind-value="eventoView.DuracionHoras" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Cupo máximo</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="number" @bind-value="eventoView.CupoMaximo" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Responsable</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="eventoView.ResponsableId">
            <option disabled selected value="0">Seleccione un responsable</option>
            @foreach (var persona in responsablesDisponibles)
            {
                <option value="@persona.Id">@persona.Nombre @persona.Apellido</option>
            }
        </select>
    </div>

    <Button Color="ButtonColor.Secondary" @onclick="Modificar">Guardar Cambios</Button>

    <div>
        @if (alert)
        {
            <Alert Color="AlertColor.Success">
                <h4 class="alert-heading">Modificación completada</h4>
                <p>El evento fue actualizado correctamente.</p>
                <hr />
            </Alert>
        }
    </div>
</div>

@code {
    [Parameter]
    public int idUsuario { get; set; }

    private class EventoViewModel
    {
        public string? Nombre { get; set; }
        public string? Descripcion { get; set; }
        public DateTime FechaHoraInicio { get; set; }
        public double DuracionHoras { get; set; }
        public int CupoMaximo { get; set; }
        public int ResponsableId { get; set; }
    }

    EventoViewModel eventoView = new();
    List<Persona> responsablesDisponibles = new();
    bool alert = false;

    protected override void OnInitialized()
    {
        responsablesDisponibles = RepoPersona.ListadoPersona();

    }

    private void Modificar()
    {
        Usuario? usu = permisos.ObtenerUsuarioActivo(); 
        try
        {
            if (usu == null)
            {
                throw new Exception("Inicie sesión para modificar el evento.");
            }
            if (!string.IsNullOrEmpty(eventoView.Nombre) &&
                !string.IsNullOrEmpty(eventoView.Descripcion) &&
                eventoView.FechaHoraInicio != default &&
                eventoView.DuracionHoras > 0 &&
                eventoView.CupoMaximo > 0 &&
                eventoView.ResponsableId > 0)
            {
                EventoDeportivo evento = new EventoDeportivo(
                    eventoView.Nombre,
                    eventoView.Descripcion,
                    eventoView.FechaHoraInicio,
                    eventoView.DuracionHoras,
                    eventoView.CupoMaximo,
                    eventoView.ResponsableId
                );

                modificarEvento.Ejecutar(evento, usu);
                alert = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en la modificación del evento: {ex.Message}");
        }
    }
}
