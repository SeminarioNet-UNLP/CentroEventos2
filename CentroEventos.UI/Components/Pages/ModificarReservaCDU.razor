@page "/modificarreserva/{idUsuario:int}"
@rendermode InteractiveServer
@inject ModificarReservaUseCase modificarReserva
@inject ServicioAutorizacion permisos
@inject IRepositorioPersona RepoPersona
@inject IRepositorioEventoDeportivo RepoEvento

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label class="col-form-label">Persona</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.PersonaId">
            <option disabled selected value="0">Seleccione una persona</option>
            @foreach (var persona in responsablesDisponibles)
            {
                <option value="@persona.Id">@persona.Nombre @persona.Apellido</option>
            }
        </select>
    </div>

    <div class="row-auto">
        <label class="col-form-label">Evento deportivo</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.EventoDeportivoId">
            <option disabled selected value="0">Seleccione un evento</option>
            @foreach (var evento in eventosDisponibles)
            {
                <option value="@evento.Id">@evento.Nombre (@evento.FechaHoraInicio.ToShortDateString())</option>
            }
        </select>
    </div>

    <div class="row-auto">
        <label class="col-form-label">Fecha de reserva</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="date" @bind-value="reservaView.FechaAltaReserva" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Estado de asistencia</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.EstadoAsistencia">
            @foreach (EstadosAsistencia estado in Enum.GetValues(typeof(EstadosAsistencia)))
            {
                <option value="@estado">@estado</option>
            }
        </select>
    </div>

    <Button Color="ButtonColor.Secondary" @onclick="Modificar">Guardar Cambios</Button>

    <div>
        @if (alert)
        {
            <Alert Color="AlertColor.Success">
                <h4 class="alert-heading">Modificación completada</h4>
                <p>La reserva fue actualizada correctamente.</p>
                <hr />
            </Alert>
        }
    </div>
</div>

@code {
    [Parameter]
    public int idUsuario { get; set; }

    private class ReservaViewModel
    {
          public int PersonaId { get; set; }
          public int EventoDeportivoId { get; set; }
          public DateTime FechaAltaReserva { get; set; }
          public EstadosAsistencia EstadoAsistencia { get; set; }
    }

    ReservaViewModel reservaView = new();
    List<Persona> responsablesDisponibles = new();
    List<EventoDeportivo> eventosDisponibles = new();
    bool alert = false;

    protected override void OnInitialized()
    {
        responsablesDisponibles = RepoPersona.ListadoPersona();

    }

    private void Modificar()
    {
        Usuario? usuario = permisos.ObtenerUsuarioActivo(); 
        try
        {
            if (usuario == null)
            {
                throw new Exception("Inicie sesión para modificar la reserva.");
            }
            if (reservaView.PersonaId > 0 &&
                reservaView.EventoDeportivoId > 0 &&
                reservaView.FechaAltaReserva != default &&
                reservaView.EstadoAsistencia != EstadosAsistencia.Ausente)
            {
                 List<Permiso> permisos = new List<Permiso> { Permiso.Usuario };
                Reserva reserva= new Reserva(                   
                        reservaView.PersonaId,
                        reservaView.EventoDeportivoId,
                        reservaView.FechaAltaReserva,
                        reservaView.EstadoAsistencia);

                reserva.Id=idUsuario;
                modificarReserva.Ejecutar(reserva,usuario);
                alert = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en la modificación de la reserva: {ex.Message}");
        }
    }
}