@page "/listadoeventos"
@rendermode InteractiveServer

@inject ListarEventosUseCase listarEventosUseCase
@inject ListarPersonasUseCase repoPersona
@inject IServicioAutorizacion autorizacion
@inject ISesion sesion


<h3>Listado de Eventos Deportivos</h3>
<button class="btn btn-primary">
    <span class="bi bi-plus " aria-hidden="true"></span> 
</button> 

@if (_eventos is null)
{
    <p>Cargando eventos...</p>
}
else if (_eventos.Count == 0)
{
    <p>No hay eventos registrados.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Responsable</th>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Fecha y Hora de Inicio</th>
                <th>Duración de horas</th>
                <th>Cupo máximo</th>
                @if (esAdmin)
                {
                  <th>Acciones</th>
                  <!--- Solo se ve si tengo el permiso (soy administrador) --->
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var e in listaEvento)
            {
                <tr>
                    <td>@($"{e.persona?.Nombre} {e.persona?.Apellido}")</td>
                    <td>@e.Nombre</td>
                    <td>@e.Descripcion</td>
                    <td>@e.FechaHoraInicio.ToString("dd/MM/yyyy")</td>
                    <td>@e.DuracionHoras</td> <!--- Va así? Porque es un double -->
                    <td>@e.CupoMaximo</td>
                    @if (esAdmin)
                    {
                      <td>  
                        <button class="btn btn-primary">
                            <span class="bi bi-pencil " aria-hidden="true"></span> 
                        </button>
                        <button class="btn btn-danger">
                          <span class="bi bi-trash" aria-hidden="true"></span>
                         </button>
                      </td>
                    }   
                </tr>
            }
        </tbody>
    </table>
}

@code{
    bool esAdmin=false;
    private List<EventoDeportivo>? _eventos;
    public class eventoViewModel
    {
        public int Id { get; set; }
        public string? Nombre { get; set; }
        public string? Descripcion { get; set; }
        public DateTime FechaHoraInicio { get; set; }
        public double DuracionHoras { get; set; }
        public int CupoMaximo { get; set; }
        public int? ResponsableId { get; set; }
        public Persona? persona  { get; set; }
    }

    private eventoViewModel eventoView = new ();
    private List<eventoViewModel> listaEvento = new ();
   

    protected override void OnInitialized()
    {
        _eventos = listarEventosUseCase.Ejecutar();
        hacer(_eventos);
        var usuarioActual = sesion.ObtenerUsuarioActivo();
        esAdmin = usuarioActual != null && autorizacion.PoseeElPermiso(usuarioActual, Permiso.Administrador);
    }

    public void hacer (List<EventoDeportivo> eventos)
    {
        var Personas = repoPersona.Ejecutar(); 
        var RepoEventos = repoPersona.Ejecutar();
        if (_eventos != null)
        {
            foreach (var e in _eventos)
            {
               eventoViewModel eventoView = new()
                {
                    Id = e.Id,
                    Nombre = e.Nombre,
                    Descripcion = e.Descripcion,
                    FechaHoraInicio = e.FechaHoraInicio,
                    DuracionHoras = e.DuracionHoras,
                    CupoMaximo = e.CupoMaximo,
                    ResponsableId = e.ResponsableId,
                    persona = Personas.FirstOrDefault(p => p.Id == e.ResponsableId)
                };
                listaEvento.Add(eventoView);
            }
        }
    }
}