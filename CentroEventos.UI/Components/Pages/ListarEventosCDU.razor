@page "/listareventos"
@rendermode InteractiveServer

@inject ListarEventosUseCase ListarEventosUseCase
@inject ListarPersonasUseCase RepoPersona
@inject IServicioAutorizacion autorizacion


<h3>Listado de Eventos Deportivos</h3>

@if (_eventos is null)
{
    <p>Cargando eventos...</p>
}
else if (_eventos.Count == 0)
{
    <p>No hay eventos registrados.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Evento ID</th>
                <th>Nombre</th>
                <th>Descripcion</th>
                <th>Fecha y Hora de Inicio</th>
                <th>Duracion de horas</th>
                <th>Cupo maximo</th>
                <th>Responsable ID</th>
                @if (esAdmin)
                {
                  <th>Acciones</th> <!--- Solo se ve si tengo el permiso (soy administrador) --->
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var e in listaEvento)
            {
                <tr>
                    <td>@($"{e.persona?.Nombre} {e.persona?.Apellido}")</td>
                    <td>@e.Id</td>
                    <td>@e.Descripcion</td>
                    <td>@e.FechaHoraInicio.ToString("dd/MM/yyyy")</td>
                    <td>@e.DuracionHoras</td> <!--- Va asÃ­? Porque es un double -->
                    <td>@e.CupoMaximo</td>
                    @if (esAdmin)
                    {
                      <th>Acciones</th> <!--- Solo se ve si tengo el permiso (soy administrador) --->
                    }   
                </tr>
            }
        </tbody>
    </table>
}

@code{
    bool esAdmin=false;
    private List<EventoDeportivo>? _eventos;
    public class eventoViewModel
    {
        public int Id { get; set; }
        public string? Nombre { get; set; }
        public string? Descripcion { get; set; }
        public DateTime FechaHoraInicio { get; set; }
        public double DuracionHoras { get; set; }
        public int CupoMaximo { get; set; }
        public int? ResponsableId { get; set; }
        public Persona? persona  { get; set; }
    }

    List<eventoViewModel> listaEvento = new ();
    eventoViewModel eventoView = new ();

    protected override void OnInitialized()
    {
        _eventos = ListarEventosUseCase.Ejecutar();
        hacer(_eventos);
        var usuarioActual = autorizacion.ObtenerUsuarioActivo();
        esAdmin = usuarioActual != null && autorizacion.PoseeElPermiso(usuarioActual, Permiso.Administrador);
    }

    public void hacer (List<EventoDeportivo> eventos)
    {
        var Personas = RepoPersona.Ejecutar(); 
        var RepoEventos = RepoPersona.Ejecutar();
        if (_eventos != null)
        {
            foreach (var e in _eventos)
            {
                eventoView.Id= e.Id;
                eventoView.Nombre = e.Nombre; 
                eventoView.Descripcion = e.Descripcion;
                eventoView.FechaHoraInicio = e.FechaHoraInicio;
                eventoView.DuracionHoras = e.DuracionHoras;
                eventoView.CupoMaximo = e.CupoMaximo;
                eventoView.ResponsableId = e.ResponsableId;
                eventoView.persona = Personas.FirstOrDefault(p => p.Id == e.ResponsableId);
                listaEvento.Add(eventoView);
            }
        }
    }
}