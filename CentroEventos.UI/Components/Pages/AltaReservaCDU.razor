@page "/agregarreserva"
@rendermode InteractiveServer
@inject AltaReservaUseCase altaReserva
@inject ISesion sesion
@inject IRepositorioPersona RepoPersona
@inject IRepositorioEventoDeportivo RepoEvento

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label class="col-form-label">Persona</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.PersonaId">
            <option disabled selected value="0">Seleccione una persona</option>
            @foreach (var persona in personasDisponibles)
            {
                <option value="@persona.Id">@persona.Nombre @persona.Apellido</option>
            }
        </select>
    </div>

    <div class="row-auto">
        <label class="col-form-label">Evento deportivo</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.EventoDeportivoId">
            <option disabled selected value="0">Seleccione un evento</option>
            @foreach (var evento in eventosDisponibles)
            {
                <option value="@evento.Id">@evento.Nombre (@evento.FechaHoraInicio.ToShortDateString())</option>
            }
        </select>
    </div>

    <div class="row-auto">
        <label class="col-form-label">Fecha de reserva</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="date" @bind-value="reservaView.FechaAltaReserva" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Estado de asistencia</label>
    </div>
    <div class="row-auto">
        <select class="form-control" @bind="reservaView.EstadoAsistencia">
            @foreach (EstadosAsistencia estado in Enum.GetValues(typeof(EstadosAsistencia)))
            {
                <option value="@estado">@estado</option>
            }
        </select>
    </div>

    <Button Color="ButtonColor.Secondary" @onclick="Registrar">Registrar</Button>

    <div>
        @if (alert)
        {
            <Alert Color="AlertColor.Success">
                <h4 class="alert-heading">Registro completado!</h4>
                <p>Bienvenido al sistema</p>
                <hr />
            </Alert>
        }
    </div>
</div>

@code {
    private class ReservaViewModel
    {
        public int PersonaId { get; set; }
        public int EventoDeportivoId { get; set; }
        public DateTime FechaAltaReserva { get; set; }
        public EstadosAsistencia EstadoAsistencia { get; set; }
    }

    ReservaViewModel reservaView = new();
    bool alert = false;

    List<Persona> personasDisponibles = new();
    List<EventoDeportivo> eventosDisponibles = new();

    protected override void OnInitialized()
    {
        personasDisponibles = RepoPersona.ListadoPersona();
        eventosDisponibles = RepoEvento.ListadoEventoDeportivo();
    }

    private void Registrar()
    {
        Usuario? usuario = sesion.ObtenerUsuarioActivo();

        try
        {
            if (usuario == null)
                throw new Exception("Debe iniciar sesiÃ³n.");

            if (reservaView.PersonaId > 0 &&
                reservaView.EventoDeportivoId > 0 &&
                reservaView.FechaAltaReserva != default &&
                reservaView.EstadoAsistencia != EstadosAsistencia.Ausente)
            {
                Reserva reserva = new Reserva(
                    reservaView.PersonaId,
                    reservaView.EventoDeportivoId,
                    reservaView.FechaAltaReserva,
                    reservaView.EstadoAsistencia
                );

                altaReserva.Ejecutar(reserva, usuario);
                alert = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en el registro: {ex.Message}");
        }
    }
}
