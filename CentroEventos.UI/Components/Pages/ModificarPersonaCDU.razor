@using static CentroEventos.UI.Components.Pages.ListarPersonasCDU
@rendermode InteractiveServer
@inject ModificarPersonaUseCase modificarPersona
@inject ISesion sesion

<div class="row g-3 align-items-center body-custom">
    @if (personaVM != null)
    {
        <div class="row-auto">
            <label class="col-form-label">Nombre</label>
        </div>
        <div class="row-auto">
            <input class="form-control" type="text" @bind-value="personaVM.Nombre" />
        </div>

        <div class="row-auto">
            <label class="col-form-label">Apellido</label>
        </div>
        <div class="row-auto">
            <input class="form-control" type="text" @bind-value="personaVM.Apellido" />
        </div>

        <div class="row-auto">
            <label class="col-form-label">DNI</label>
        </div>
        <div class="row-auto">
            <input class="form-control" type="text" @bind-value="personaVM.Dni" />
        </div>

        <div class="row-auto">
            <label class="col-form-label">Email</label>
        </div>
        <div class="row-auto">
            <input class="form-control" type="email" @bind-value="personaVM.Email" />
        </div>

        <div class="row-auto">
            <label class="col-form-label">Teléfono</label>
        </div>
        <div class="row-auto">
            <input class="form-control" type="text" @bind-value="personaVM.Telefono" />
        </div>
        <Button Color="ButtonColor.Primary" @onclick="Modificar">Guardar Cambios</Button>
        

        <div>
            @if (alert)
            {
                <Alert Color="AlertColor.Success">
                    <h4 class="alert-heading">Modificación completada</h4>
                    <p>La persona fue actualizada correctamente.</p>
                    <hr />
                </Alert>
            }
            @if (alert2)
            {
                <Alert Color="AlertColor.Danger">
                    <h4 class="alert-heading">Error: @mensajeError</h4>
                    <hr />
                </Alert>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public personaViewModel? personaVM { get; set; }

    bool alert = false;
    bool alert2 = false;
    string? mensajeError;

    public void Modificar()
    {   
        try
        {
            Usuario? usuarioActual = sesion.ObtenerUsuarioActivo();

            if (usuarioActual == null)
                throw new Exception("Debe iniciar sesión para modificar.");

            if (!string.IsNullOrEmpty(personaVM?.Dni) &&
                !string.IsNullOrEmpty(personaVM.Nombre) &&
                !string.IsNullOrEmpty(personaVM.Apellido) &&
                !string.IsNullOrEmpty(personaVM.Email) &&
                !string.IsNullOrEmpty(personaVM.Telefono))
            {
                var persona = new Persona(
                    personaVM.Dni,
                    personaVM.Nombre,
                    personaVM.Apellido,
                    personaVM.Email,
                    personaVM.Telefono
                )
                {
                    Id = personaVM.Id
                };

                modificarPersona.Ejecutar(persona, usuarioActual);
                alert = true;
                alert2 = false;
            }
            else
            {
                throw new Exception("Todos los campos son obligatorios.");
            }
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
            alert2 = true;
            alert = false;
        }
    }
}

