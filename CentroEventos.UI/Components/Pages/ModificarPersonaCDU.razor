@inject ModificarPersonaUseCase modificarPersona

@inject ServicioSesion sesion

<div class="row g-3 align-items-center body-custom">
    <div class="row-auto">
        <label class="col-form-label">Dni</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="personaView.Dni" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Nombre</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="personaView.Nombre" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Apellido</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="personaView.Apellido" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Email</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" step="0.1" @bind-value="personaView.Email" />
    </div>

    <div class="row-auto">
        <label class="col-form-label">Teléfono</label>
    </div>
    <div class="row-auto">
        <input class="form-control" type="text" @bind-value="personaView.Telefono" />
    </div>
    <Button Color="ButtonColor.Secondary" @onclick="Modificar">Guardar Cambios</Button>

    <div>
        @if (alert)
        {
            <Alert Color="AlertColor.Success">
                <h4 class="alert-heading">Modificación completada</h4>
                <p>La persona fue actualizada correctamente.</p>
                <hr />
            </Alert>
        }
    </div>
</div>


@code {

    [Parameter]
    public int idUsuario {get; set;}
    
    private class personaViewModel
    {
        public string? Dni { get; set; }
        public string? Nombre { get; set; }
        public string? Apellido { get; set; }
        public string? Email { get; set; }
        public string? Telefono { get; set; }
    }
    
    personaViewModel personaView = new();
    bool alert = false;
    private void Modificar()
    {   
        Usuario? usuarioActual = sesion.ObtenerUsuarioActivo();
        
        try 
        {
            if (usuarioActual == null)
            {
                throw new Exception ($"Error en la modificacion de usuario: Inicie sesion.");
            }
            if (!string.IsNullOrEmpty(personaView.Dni) && 
                !string.IsNullOrEmpty(personaView.Nombre) && 
                !string.IsNullOrEmpty(personaView.Apellido) && 
                !string.IsNullOrEmpty(personaView.Email) &&
                !string.IsNullOrEmpty(personaView.Telefono)) 
            {
                List<Permiso> permisos = new List<Permiso> { Permiso.Usuario };
                Persona persona = new Persona(      
                        personaView.Dni,             
                        personaView.Nombre,
                        personaView.Apellido,
                        personaView.Email,
                        personaView.Telefono);

                persona.Id = idUsuario;
                modificarPersona.Ejecutar(persona, usuarioActual);
                OnInitializedAsync();
                alert = true;
            }
        }
        catch (Exception ex) 
        {
            Console.WriteLine($"Error en la modificacion de usuario: {ex.Message}");
        }
    }
}
